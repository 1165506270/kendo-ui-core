#!/bin/sh

VERSION_YEAR=`ruby -e "require '$PWD/build/version.rb'; puts VERSION_YEAR;"`
VERSION_Q=`ruby -e "require '$PWD/build/version.rb'; puts VERSION_Q;"`
VERSION=`ruby -e "require '$PWD/build/version.rb'; puts VERSION;"`
VERSION_HUMAN="${VERSION_YEAR}.Q${VERSION_Q}"
TAG=$VERSION

if [ ! -z "$META" ]; then
    TAG="$TAG+$META"
fi

echo "This script will build the current repo and publish it to bower."
echo "The release will be labeled '${VERSION_HUMAN}' and tagged '$TAG'."

publish_bower() {
    echo "Building distribution..."
    eval $4 # bundle exec

    echo "Fetching bower repo..."
    bowergit="git --work-tree=$2 --git-dir=$2/.git"

    if [ ! -d $2 ]; then
        git clone $1 $2
    else
        $bowergit fetch
        $bowergit reset --hard origin/master
        $bowergit clean -dfx
    fi;

    echo "Copy build artifacts..."

    rm -rf $2/{js,styles,src}
    cp -rf $3/js $2
    cp -rf $3/src $2
    cp -rf $3/styles $2

    mv $2/src/src $2/src/js


    echo "Update bower package version..."

    # OS X sed sucks - use gnu sed if present

    if which gsed; then
       sed_bin="gsed"
    else
       sed_bin="sed"
    fi

    $sed_bin -i "s/\"[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+\"/\"$VERSION\"/" $2/bower.json

    $bowergit add --all .
    $bowergit commit -m "Update to $VERSION_HUMAN"
    $bowergit tag -a $TAG -m $VERSION
    $bowergit push origin $VERSION
}


# core
# publish_bower "git@github.com:kendo-labs/bower-kendo-ui.git" "bower-core-repo" "dist/bundles/core" "bundle exec rake bundles:core"

#production
publish_bower "git@github.com:telerik/bower-kendo-ui.git" "bower-repo" "dist/bundles/professional.commercial" "rake bundles:professional.commercial"

#core
# publish_bower "git@github.com:kendo-labs/bower-kendo-ui.git" "bower-core-repo" "dist/bundles/core" "bundle exec rake bundles:core"
