<div id="example">
        <div id="gantt"></div>

        <div class="box">
            <h4>Console log</h4>
            <div class="console"></div>
        </div>

        <script>
            function onChange(arg) {
                var gantt = arg.sender;
                var selection = gantt.select();

                if (selection.length) {
                    var dataItem = gantt.dataItem(selection);
                    kendoConsole.log("Gantt change :: " + dataItem.title);
                }
            }

            function onDataBound(arg) {
                kendoConsole.log("Gantt data bound");
            }

            function onDataBinding(arg) {
                kendoConsole.log("Gantt data binding");
            }

            $(document).ready(function() {
                var serviceRoot = "http://ivanchev/KendoCRUDService";
                var tasksDataSource = new kendo.data.GanttDataSource({
                    batch: false,
                    transport: {
                        read: {
                            url: serviceRoot + "/GanttTasks",
                            dataType: "jsonp"
                        },
                        update: {
                            url: serviceRoot + "/GanttTasks/Update",
                            dataType: "jsonp"
                        },
                        destroy: {
                            url: serviceRoot + "/GanttTasks/Destroy",
                            dataType: "jsonp"
                        },
                        create: {
                            url: serviceRoot + "/GanttTasks/Create",
                            dataType: "jsonp"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read") {
                                return { models: kendo.stringify(options.models || [options]) };
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                id: { from: "ID", type: "number" },
                                orderId: { from: "OrderID", type: "number", validation: { required: true } },
                                parentId: { from: "ParentID", type: "number", validation: { required: true } },
                                start: { from: "Start", type: "date" },
                                end: { from: "End", type: "date" },
                                title: { from: "Title", defaultValue: "", type: "string" },
                                percentComplete: { from: "PercentComplete", type: "number" },
                                summary: { from: "IsSummary" },
                                expanded: { from: "Expanded" }
                            }
                        }
                    }
                });

                var dependenciesDataSource = new kendo.data.GanttDependencyDataSource({
                    transport: {
                        read: {
                            url: serviceRoot + "/GanttDependencies",
                            dataType: "jsonp"
                        },
                        update: {
                            url: serviceRoot + "/GanttDependencies/Update",
                            dataType: "jsonp"
                        },
                        destroy: {
                            url: serviceRoot + "/GanttDependencies/Destroy",
                            dataType: "jsonp"
                        },
                        create: {
                            url: serviceRoot + "/GanttDependencies/Create",
                            dataType: "jsonp"
                        },
                        parameterMap: function(options, operation) {
                            if (operation !== "read" && options.models) {
                                return { models: kendo.stringify(options.models) };
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                predecessorId: { from: "PredecessorID", type: "number" },
                                successorId: { from: "SuccessorID", type: "number" },
                                type: { from: "Type", type: "number" }
                            }
                        }
                    }
                });

            var gantt = $("#gantt").kendoGantt({
                dataSource: tasksDataSource,
                dependencies: dependenciesDataSource,
                views: [
                    { type: "day", selected: false, slotSize: 70 },
                    { type: "week", selected: true, slotSize: 80 },
                    { type: "month", selected: false, slotSize: 150 }
                ],
                columns: [
                    { field: "id", title: "ID", width: 50 },
                    { field: "title", title: "Title" },
                    { field: "start", title: "Start Time", format: "{0:MM/dd/yyyy HH:mm}" },
                    { field: "end", title: "End Time", format: "{0:MM/dd/yyyy HH:mm}" }
                ],
                height: 700,

                workWeekStart: 1,
                workWeekEnd: 4,
                showWorkHours: false,
                showWorkDays: false,
                hourSpan: 1,

                snap: false,

                dataBound: onDataBound,
                dataBinding: onDataBinding,
                change: onChange
            }).data("kendoGantt");
            });
        </script>
    </div>

