<div data-role="view" data-init="mobileListViewPullWithEndless" data-title="Pull to refresh">
    <header data-role="header">
        <div data-role="navbar">
            <span data-role="view-title"></span>
            <a data-align="right" data-role="button" class="nav-button" href="#index">Index</a>
        </div>
    </header>

    <ul id="pull-with-endless"></ul>
</div>

<script id="pull-with-endless-template" type="text/x-kendo-template">
    <div class="tweet">
        <img class="pullImage" src="#= user.profile_image_url #" alt="#= user.name #" />#= text #
        <div class="metadata">
            <a class="sublink" target="_blank" href="http://twitter.com/\\#!/#= user.screen_name #/status/#= id_str #" data-rel="external" rel="nofollow">#= kendo.toString(new Date(Date.parse(created_at)), "dd MMM HH:mm") #</a>
            |
            <a class="sublink" href="http://twitter.com/#= user.screen_name #" rel="nofollow" data-rel="external">#= user.name #</a>
        </div>
    </div>
</script>

<script>
    var maxIdRegExp = /max_id=\d*/,
        sinceIdRegExp = /since_id=\d*/;

    function getQueryValue(queryString, regexp) {
        var value = regexp.exec(queryString);

        if (value) {
            value = value[0].split("=")[1];
        }

        return value;
    }

    function mobileListViewPullWithEndless() {
        var dataSource = new kendo.data.DataSource({
            serverPaging: true,
            pageSize: 10,
            transport: {
                read: {
                    url: "http://demos.kendoui.com/service/Twitter/Search", // the remove service url
                    dataType: "jsonp" // JSONP (JSON with padding) is required for cross-domain AJAX
                },
                parameterMap: function(options) {
                    options = {
                        q: "javascript",
                        count: options.pageSize
                    };
                    if (paged) {
                        paged = false;
                        options["max_id"] = max_id_str; //additional parameters sent to the remove service
                    }

                    return options;
                }
            },
            schema: { // describe the result format
                parse: function(response) {
                    if (response.search_metadata) {
                        max_id_str = getQueryValue(response.search_metadata.next_results, maxIdRegExp); //retrieve max_id for the endless scrolling
                    }
                    return response;
                },
                data: function(data) {
                    return data.statuses || [];
                },
                total: function() { return 100000 }
            }
        }),
        paged, max_id_str;

        $("#pull-with-endless").kendoMobileListView({
            dataSource: dataSource,
            template: $("#pull-with-endless-template").text(),
            appendOnRefresh: true,
            pullToRefresh: true,
            endlessScroll: true,
            endlessScrollParameters: function() {
                paged = true;
            }
        });
    }
</script>

<style scoped>
    .tweet {
        font-size: .8em;
        line-height: 1.4em;
    }
    .pullImage {
        width: 64px;
        height: 64px;
        border-radius: 3px;
        float: left;
        margin-right: 10px;
    }
    .sublink {
        font-size: .9em;
        font-weight: normal;
        display: inline-block;
        padding: 3px 3px 0 0;
        text-decoration: none;
        opacity: .8;
    }
</style>
