<div id="example" class="k-content">
    <div class="configuration-horizontal">
        <div class="config-section">
            <span class="configHead">Menu</span>
            <ul data-role="menu"
                data-bind="events: { select: onSelect },
                           visible: isVisible"
                style="width: 300px">
                <li>
                    Products
                    <ul>
                        <li>
                            Furniture
                            <ul> <!-- moving the UL to the next line will cause an IE7 problem -->
                                <li>Tables & Chairs</li>
                                <li>Sofas</li>
                                <li>Occasional Furniture</li>
                                <li>Childerns Furniture</li>
                                <li>Beds</li>
                            </ul>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <div class="config-section" style="width: 300px">
            <div class="configHead">Console</div>
            <div class="console"></div>
        </div>
    </div>
    <div class="configuration-horizontal">
        <div class="config-section">
            <span class="configHead">Configuration</span>
            <div>
                <label><input type="checkbox" data-bind="checked: isVisible">Visible</label>
            </div>
        </div>
        <div class="config-section" style="width: 440px">
            <span class="configHead">Information</span>
            Kendo UI Menu supports the
            <a href="http://docs.kendoui.com/getting-started/framework/mvvm/bindings/events">events</a> and
            <a href="http://docs.kendoui.com/getting-started/framework/mvvm/bindings/visible">visible</a> bindings.
        </div>
    </div>
<script>
    var viewModel = kendo.observable({
        isVisible: true,
        onSelect: function(e) {
            var text = $(e.item).children(".k-link").text();
            kendoConsole.log("event :: select(" + text + ")");
        },
        products: new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ProductID"
                }
            },
            batch: true,
            transport: {
                read: {
                    url: "http://demos.kendoui.com/service/products",
                    dataType: "jsonp"
                },
                update: {
                    url: "http://demos.kendoui.com/service/products/update",
                    dataType: "jsonp"
                },
                create: {
                    url: "http://demos.kendoui.com/service/products/create",
                    dataType: "jsonp"
                },
                parameterMap: function(options, operation) {
                    if (operation !== "read" && options.models) {
                        return {models: kendo.stringify(options.models)};
                    }
                }
            }
        })
    });
    kendo.bind($("#example"), viewModel);
</script>
</div>
