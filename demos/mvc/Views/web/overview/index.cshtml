@{

    ViewBag.ShowCodeStrip = false;
}

        <div id="example" class="k-content k-web" style="background-color: #fff;">
            <div class="box">
                <a class="imgPlate" href="../grid/index.html"><img alt="Grid" src="../../content/web/overview/grid.png"></a>
                <h3><a href="../grid/index.html">Grid</a></h3>
                <p>The Grid widget displays tabular data and offers rich support for interacting with data; including paging, sorting, grouping, and selection.</p>
            </div>
            <div class="box beta">
                <a class="imgPlate" href="../scheduler/index.html"><img alt="Scheduler" src="../../content/web/overview/scheduler.png"></a>
                <h3><a href="../scheduler/index.html">Scheduler</a></h3>
                <p>The Scheduler allows users to create and manage single or recurring tasks in day, week, month and custom views. Supports touch, mouse, and keyboard.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../editor/index.html"><img alt="Editor" src="../../content/web/overview/editor.png"></a>
                <h3><a href="../editor/index.html">Editor</a></h3>
                <p>The Editor allows users to create rich text content by means of a WYSIWYG interface. The generated widget value is comprised of XHTML markup.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../autocomplete/index.html"><img alt="AutoComplete" src="../../content/web/overview/autocomplete.png"></a>
                <h3><a href="../autocomplete/index.html">AutoComplete</a></h3>
                <p>The AutoComplete provides suggestions depending on the typed text. It also allows multiple value entries. The suggestions shown by the AutoComplete can come from a local Array or from a remote data source.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../combobox/index.html"><img alt="ComboBox" src="../../content/web/overview/combobox.png"></a>
                <h3><a href="../combobox/index.html">ComboBox</a></h3>
                <p>The ComboBox widget allows selection from pre-defined values or entering a new value. It is a richer version of the standard HTML select, providing support for local and remote data binding, item templates, and configurable options for controlling the list behavior.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../datepicker/index.html"><img alt="DatePicker" src="../../content/web/overview/datepicker.png"></a>
                <h3><a href="../datepicker/index.html">DatePicker</a></h3>
                <p>The DatePicker allows the end user to select a date from a calendar or by inputing the data directly. It supports custom templates for "month" view, configurable options for min and max date, start view and the depth of the navigation.</p>
            </div>

            <div class="box">
                <a class="imgPlate" href="../listview/index.html"><img alt="ListView" src="../../content/web/overview/listview.png"></a>
                <h3><a href="../listview/index.html">ListView</a></h3>
                <p>The ListView is designed to give your the freedom to specify custom type of layout for the items displayed in the control. It can be bound to local JSON data or to remote data using the Kendo DataSource component.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../datasource/index.html"><img alt="DataSource" src="../../content/web/overview/datasource.png"></a>
                <h3><a href="../datasource/index.html">DataSource</a></h3>
                <p>The DataSource component is an abstraction for using local (arrays of JavaScript objects) or remote (XML, JSON, JSONP) data. It fully supports <acronym title="Create, Read, Update, Destroy" style="border-bottom:1px dotted;cursor:help">CRUD</acronym> data operations and provides both local and server-side support for Sorting, Paging, Filtering, Grouping, and Aggregates.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../mvvm/index.html"><img alt="MVVM" src="../../content/web/overview/mvvm.png"></a>
                <h3><a href="../mvvm/index.html">MVVM</a></h3>
                <p>Model View ViewModel (MVVM) is a design pattern which allows developers to control their views by manipulating view model objects.  The MVVM framework keeps the view and the model in synch without the developer having to manually do both.</p>
            </div>

            
            <style scoped>
                .box {
                	min-height: 300px;
                }
		.imgPlate {
		    height: 146px;
		}
            </style>
        </div>