@section Description {
    Kendo UI provides everything you need for building modern, interactive, JavaScript applications.
    In addition to having more than 10 UI widgets, including a Grid, Chart, and ComboBox,
    Kendo delivers a rich framework for client-side data binding, templating, animation, and drag-and-drop actions.
    Don't waste time trying to find and use tons of scattered jQuery plug-ins.
    Kendo UI incorporates a seamless, professionally tested and supported HTML5 toolbox for every project.
}

        <div id="example" class="k-content">
            <div class="box">
                <a class="imgPlate" href="../autocomplete/index.html"><img alt="AutoComplete" src="../../content/web/overview/autocomplete.png"></a>
                <h3><a href="../autocomplete/index.html">AutoComplete</a></h3>
                <p>The AutoComplete provides suggestions depending on the typed text. It also allows multiple value entries. The suggestions shown by the AutoComplete can come from a local Array or from a remote data service.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../grid/index.html"><img alt="Grid" src="../../content/web/overview/grid.png"></a>
                <h3><a href="../grid/index.html">Grid</a></h3>
                <p>The Grid widget displays tabular data and offers rich support interacting with data, including paging, sorting, grouping, and selection.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../combobox/index.html"><img alt="ComboBox" src="../../content/web/overview/combobox.png"></a>
                <h3><a href="../combobox/index.html">ComboBox</a></h3>
                <p>The ComboBox widget allows the selection from pre-defined values or entering a new value. It is a richer version of the standard HTML select, providing support for local and remote data binding, item templates, and configurable options for controlling the list behavior.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../datepicker/index.html"><img alt="DatePicker" src="../../content/web/overview/datepicker.png"></a>
                <h3><a href="../datepicker/index.html">DatePicker</a></h3>
                <p>The DatePicker allows the end user to select a date from a calendar or by direct input. It supports custom templates for "month" view, configurable options for min and max date, start view and the depth of the navigation.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../datasource/index.html"><img alt="DataSource" src="../../content/web/overview/datasource.png"></a>
                <h3><a href="../datasource/index.html">DataSource</a></h3>
                <p>The DataSource component is an abstraction for using local (arrays of JavaScript objects) or remote (XML, JSON, JSONP) data. It fully supports CRUD (Create, Read, Update, Destroy) data operations and provides both local and server-side support for Sorting, Paging, Filtering, Grouping, and Aggregates.</p>
            </div>
            <div class="box new">
                <a class="imgPlate" href="../editor/index.html"><img alt="Editor" src="../../content/web/overview/editor.png"></a>
                <h3><a href="../editor/index.html">Editor</a></h3>
                <p>The Editor allows users to create rich text content by means of a WYSIWYG interfance. The generated widget value is an XHTML markup.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../menu/index.html"><img alt="Menu" src="../../content/web/overview/menu.png"></a>
                <h3><a href="../menu/index.html">Menu</a></h3>
                <p>The Menu displays hierarchical data as a multi-level menu. It provides rich styling for unordered lists of items, and can be used for both navigation and executing JavaScript commands.</p>
            </div>
            <div class="box new">
                <a class="imgPlate" href="../mvvm/index.html"><img alt="MVVM" src="../../content/web/overview/mvvm.png"></a>
                <h3><a href="../mvvm/index.html">MVVM</a></h3>
                <p>Model View ViewModel (MVVM) is a design pattern which helps developers separate the Model from the View. The View-Model part of MVVM is responsible for exposing the data objects from the Model in such a way that those objects are easily consumed in the View.</p>
            </div>
            <div class="box">
                <a class="imgPlate" href="../window/index.html"><img alt="Window" src="../../content/web/overview/window.png"></a>
                <h3><a href="../window/index.html">Window</a></h3>
                <p>A Window displays content in a modal or non-modal HTML window. By default, a Window can be moved, resized, and closed. Its content can also be defined with either as static HTML or loaded dynamically via AJAX.</p>
            </div>
        </div>